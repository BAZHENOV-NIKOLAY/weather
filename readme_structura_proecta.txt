1. папка - .vscode - специальная папка (в работе не нужна в которую создаёт сам VS Code)

2. папка - node_modules -  содержит все необходимые модули бибиблиотеки, которые нужны для корректной работы нашего проекта, с этой папкой мы работать не будем. Просто знаем, что там храняться все наши библиотеки

3. папка - public - в ней будет находится наш скомпелированный проект

4. папка - src - здесь находятся все наши рабочие файлы. т.е. все файлы с которыми мы будем взаимодействовать они находятся здесь в папке src.

5.  папка - src\assets - в этой папке могут находится разные эссеты - это могут быть какие-то картинки, это могут быть какие-то файлы со стилями (*.css), это могут быть файлы с предпроцессэром (*.sass, *.scss и тд). Т.е. здесь находятся все те файлы которые являются как бы дополнительными файлами к нашему проекту (картинки, стили, документы, аудио видео и т.д.). В начале мы полностью всё удаляем из этой папки и будем сюда помещать только то, что нам будет нужно в будующем по мере необходимости.

6. папка - src\components - папка с компанентами. Мы будем работать только с одним файлом (компанентом) App.vue. Когда мы в будующем создавать более сложные проекты то мы сможем разбивать одну странцу на несколько компанентов (составных блоков. напремер: шапка, подвал, основная часть, боковая часть и т.д. поэтому логично выделить это всё в отдельные компоненты - в отдельные файлы) и далее мы все эти отдельные части мы будем соединять воедино в таком файле как App.vue. В одну единую картинку мы соединяем все наши компаненты в файле App.vue.

7.файл - App.vue - основной компанет всего нашего проекта. И если посмотреть на код этого файла то мы заметим, что любой компонент из некого скрипта
<sсript setup> setup-атрибут нужен лишь в том случае если у нас есть дополнительные компоненты. (когда один компанент то setup-атрибут можно удалить)
    здесь пропиывается любой js - код
</sсript>

<template>
    здесь прописываем html - код. Удаляем весь html-код по умолчанию
</template>

<style scoped>
    здесь прописываем css - код для конкретно этого компанента. И удалим также весь css-код так как мы его потом тоже весь пропишем.
</style>

8. файл - src\main.js - основной файл
    import { createApp } from 'vue' - мы говорим, что подключаем (import) { createApp } из фреймворка вью (from 'vue')
    import App from './App.vue' - также мы говорим какой основной компанент мы поключаем такой компанет (App) из (from) файла './App.vue'
    import './assets/main.css' - здесь подключается импорт стилей. Пока мы эту строчку кода закоментируем так как мы пока удалили различные файлы со стилями
    createApp(App).mount('#app') - здесь мы обращаемся к нашему основному html-файлу (index.html и в этом html-файле) здесь есть <div id="app"></div> и как бы всё то что далее у нас будет прописано в нашем основном компоненте App.vue всё это мы поместим внутрь нашего <div id="app"></div> который есть в стандартном html-файле.
   Т.е. вся логика нашего проекта заключается в том что у нас есть некий html - файл.
   Самое главное, что в нём происходит это подключение внизу body js-файла (<script type="module" src="/src/main.js"></script>).
   В main.js - файле мы подключаем все наши компаненты (на текущий момент всего 1 наш компанент  import App from './App.vue' здесь же подключаем стили)
   и далее мы в этом же main.js - говорим о том, что в некий html-тег (createApp(App).mount('#app')) мы помещаем полностью всё то содержимое, которое будет в определённом компоненте.
   И теперь всё, что я опишу в компоненте App.vue (javascript-код, html-код или какие-то стили) всё это будет подставлено внутрь тега <div id="app"></div>

9. файл -.gitignore - этот файл нужен если мы работаем с git-репозиторием (можно удалить так нет git)

10. файл - index.html - основной файл всей нашей страницы

11. файл - package-lock.json - 
12. файл - package.json - эти файлы описывают весь наш проект здесь указывается название проекта, его версия. различные скрипты ("scripts":) например ("dev":) - 

  "scripts": {
    "dev": "vite",
    "build": "vite build",
    "preview": "vite preview"
  },

 например (скрипт "dev") - запускает такую команду как "vite" - а "vite" - это просто встроенный сервер, который существует в "Vue.js".

Т.е. по факту когда мы запускаем команду "npm run dev" то мы просто запускаем такую команду как "vite" и тем самым мы запускаем локальный сервер.
   Ну в общем "package-lock.json" и "package.json" описывают структуру нашего проекта

13. README.md - файл с детальным описанием нашего проекта. Этот файл по большому счёту нужен лишь только в том случае, если мы выгружаем проект в git-репозиторий (т.е. можно удалить так как нет git)

14. vite.config.js - файл. В этом файле описываются настройки для нашего локального сервера, который по умолчанию включен в vue.js - проект. С этим файлом нам ничего не потребуется делать просто нужно понимать, что этот файл описывает локальный сервер.

Во Vue.js если мы запустили сервер то он будет работать постоянно.
При изменении данных на странице происходит автоматическое обовление сервера и данных в отображении